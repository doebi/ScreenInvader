FUNCTION="$1"

declare -A DATA="$(janosh get /display/.)"

function setResolution() {
  xrandr --output "${DATA[/display/adapter/value]}" --mode "${DATA[/display/resolution/value]}" --primary
}

function setBlanking() {
  timeout="${DATA[/display/blank/value]}"
  if [ "$timeout" -gt 0 ]; then
    xset s blank
    xset s $[ $timeout * 60 ]
    xset +dpms
    setterm -blank $timeout
    setterm -powersave on
    setterm -powerdown $timeout

  else
    xset s off
    xset -dpms
    setterm -blank 0
    setterm -powersave off
    setterm -powerdown 0
  fi
}

function readAvailableAdapters() {
  xrandr -q | grep -Po '^\K(.*)(?= connected)'
}

function readAvailableResolutions() {
  xrandr -q | sed "1,/^$1/d" | while read line; do
    if ! echo $line | grep -Po '^\s*\K([0-9]*x[0-9]*)(?=)'; then
      break
    fi
  done 
}

function readCurrentResolution() {
  xrandr -q | grep -m1 -Po 'current \K([0-9]* x [0-9]*)(?=)' | sed 's/ //g'
} 

function reload() {
  janosh set /display/resolution/value $(readCurrentResolution)
  adapter="$(janosh -r get /display/adapter/value)"
  i=0

  readAvailableAdapters | while read a; do
    janosh set "/display/adapter/choices/#$i" "$a"
    i=$[$i+1]
  done

  [ -z $adapter ] && adapter="$(janosh -r get /display/adapter/choices/#0)"

  readAvailableResolutions "$adapter" | while read r; do
    janosh set "/display/resolution/choices/#$i" "$r"
    i=$[$i+1]
  done
}

function apply() {
  setResolution
  setBlanking
  #make sure the mouse cursor isn't visible even if -nocursur fails
  xdotool mousemove 1900 1200
}

if [ "$(type -t "$FUNCTION")" == "function" ]; then
  $FUNCTION
else
  echo "Unknown command: $FUNCTION" 1>&2
  exit 1
fi


